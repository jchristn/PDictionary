<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PersistentDictionary</name>
    </assembly>
    <members>
        <member name="T:PersistentDictionary.PDictionary`2">
            <summary>
            Persistent dictionary.  Key and value types must both be JSON serializable.
            </summary>
            <typeparam name="TKey">Type for key.</typeparam>
            <typeparam name="TValue">Type for value.</typeparam>
        </member>
        <member name="P:PersistentDictionary.PDictionary`2.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="P:PersistentDictionary.PDictionary`2.Item(`0)">
            <summary>
            Get or set a specific key.
            </summary>
            <param name="key">Key.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:PersistentDictionary.PDictionary`2.Keys">
            <summary>
            Retrieve keys.
            </summary>
        </member>
        <member name="P:PersistentDictionary.PDictionary`2.Values">
            <summary>
            Retrieve values.
            </summary>
        </member>
        <member name="P:PersistentDictionary.PDictionary`2.Count">
            <summary>
            Retrieve the count of the number of entries.
            </summary>
        </member>
        <member name="P:PersistentDictionary.PDictionary`2.IsReadOnly">
            <summary>
            Indicates if the dictionary is read-only.
            </summary>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.#ctor(System.String)">
            <summary>
            Instantiate using the specified file.  If the file exists, its contents will be loaded into the dictionary.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.Add(`0,`1)">
            <summary>
            Add a key-value pair.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Add a key-value pair.
            </summary>
            <param name="item">Key-value pair.</param>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.Clear">
            <summary>
            Clear the dictionary.
            </summary>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Check if a key-value pair exists.
            </summary>
            <param name="item">Key-value pair.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.ContainsKey(`0)">
            <summary>
            Check if a key exists.
            </summary>
            <param name="key">Key.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copy to a key-value pair array.
            </summary>
            <param name="array">Array.</param>
            <param name="arrayIndex">Array index.</param>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.GetEnumerator">
            <summary>
            Retrieve the enumerator.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.Remove(`0)">
            <summary>
            Remove a key.
            </summary>
            <param name="key"></param>
            <returns>True if removed.</returns>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Remove a key-value pair.
            </summary>
            <param name="item">Key-value pair.</param>
            <returns>True if found.</returns>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Try to retrieve a value.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>True if found.</returns>
        </member>
        <member name="M:PersistentDictionary.PDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Retrieve the enumerator.
            </summary>
            <returns>IEnumerator.</returns>
        </member>
    </members>
</doc>
